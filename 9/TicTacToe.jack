class TicTacToe {
    field Array board;
    field int currentPlayer;
    field boolean gameWon;

    constructor TicTacToe new() {
        let board = Array.new(9);
        do initializeBoard();
        let currentPlayer = 0;
        let gameWon = false;
        return this;
    }

    method void initializeBoard() {
        var int i;
        let i = 0;
        while (i < 9) {
            let board[i] = -1;
            let i = i + 1;
        }
        return;
    }

    method boolean makeMove(int position) {
        if ((position < 0) | (position > 8)) {
            return false;
        }
        if (~(board[position] = -1)) {
            return false;
        }

        let board[position] = currentPlayer;
        let gameWon = checkWin();
        
        if (~gameWon) {
            do switchPlayer();
        }
        
        return true;
    }

    method boolean checkWin() {
        var int i;
        
        // Check rows
        let i = 0;
        while (i < 9) {
            if ((~(board[i] = -1)) & 
                (board[i] = board[i + 1]) & 
                (board[i] = board[i + 2])) {
                return true;
            }
            let i = i + 3;
        }
        
        // Check columns
        let i = 0;
        while (i < 3) {
            if ((~(board[i] = -1)) & 
                (board[i] = board[i + 3]) & 
                (board[i] = board[i + 6])) {
                return true;
            }
            let i = i + 1;
        }
        
        // Check diagonals
        if ((~(board[0] = -1)) & 
            (board[0] = board[4]) & 
            (board[0] = board[8])) {
            return true;
        }
        if ((~(board[2] = -1)) & 
            (board[2] = board[4]) & 
            (board[2] = board[6])) {
            return true;
        }
        
        return false;
    }

    method boolean isBoardFull() {
        var int i;
        let i = 0;
        while (i < 9) {
            if (board[i] = -1) {
                return false;
            }
            let i = i + 1;
        }
        return true;
    }

    method void switchPlayer() {
        if (currentPlayer = 0) {
            let currentPlayer = 1;
        }
        else {
            let currentPlayer = 0;
        }
        return;
    }

    method void printBoard() {
        var int i;
        let i = 0;
        
        do Output.println();
        while (i < 9) {
            if (board[i] = -1) {
                do Output.printString("-");
            }
            if (board[i] = 0) {
                do Output.printString("X");
            }
            if (board[i] = 1) {
                do Output.printString("O");
            }
            
            if ((i = 2) | (i = 5) | (i = 8)) {
                do Output.println();
            }
            else {
                do Output.printString(" | ");
            }
            
            let i = i + 1;
        }
        do Output.println();
        return;
    }

    method int getCurrentPlayer() {
        return currentPlayer;
    }

    method boolean isGameWon() {
        return gameWon;
    }

    method void dispose() {
        do Memory.deAlloc(board);
        return;
    }
}